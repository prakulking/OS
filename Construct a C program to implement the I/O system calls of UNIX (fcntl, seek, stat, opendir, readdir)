#include <fcntl.h>
#include <stdio.h>

int main() {
    int result = create("example.txt", S_IRUSR | S_IWUSR);
    if (result == -1) {
        perror("Error creating file");
        return 1;
    }
    printf("File created successfully\n");
    return 0;
}
#include <sys/types.h>
#include <unistd.h>
#include <stdio.h>

int main() {
    int fd = open("example.txt", O_RDONLY);
    if (fd == -1) {
        perror("Error opening file");
        return 1;
    }

    off_t current_position = lseek(fd, 0, SEEK_CUR);
    if (current_position == -1) {
        perror("Error seeking");
        close(fd);
        return 1;
    }
#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <stdio.h>

int main() {
    int result = stat("example.txt", &buf);
    if (result == -1) {
        perror("Error getting file information");
        return 1;
    }

    printf("File size: %lu bytes\n", (unsigned long)buf.st_size);
    printf("File permissions: %o\n", buf.st_mode & S_IFMT);
    return 0;
}
    printf("Current file position: %ld\n", current_position);
    close(fd);
    return 0;
}
#include <sys/types.h>
#include <sys/dir.h>
#include <unistd.h>
#include <stdio.h>

int main() {
    DIR *dir;
    struct dirent *ent;

    if ((dir = opendir(".")) != NULL) {
        while ((ent = readdir(dir)) != NULL) {
            printf("%s\n", ent->d_name);
        }
        closedir(dir);
    } else {
        perror("Error opening directory");
        return 1;
    }

    return 0;
}
#include <sys/types.h>
#include <unistd.h>
#include <stdio.h>

int main() {
    int fd = open("example.txt", O_RDONLY);
    if (fd == -1) {
        perror("Error opening file");
        return 1;
    }

    char buffer[1000];
    ssize_t bytes_read = read(fd, buffer, sizeof(buffer));
    if (bytes_read == -1) {
        perror("Error reading file");
        close(fd);
        return 1;
    }

    printf("Content of the file:\n%s", buffer);
    close(fd);
    return 0;
}
#include <sys/types.h>
#include <unistd.h>
#include <stdio.h>

int main() {
    int fd = open("example.txt", O_WRONLY | O_CREAT, S_IRUSR | S_IWUSR);
    if (fd == -1) {
        perror("Error creating and opening file");
        return 1;
    }

    const char *content = "This is a test file\n";
    ssize_t bytes_written = write(fd, content, strlen(content));
    if (bytes_written == -1) {
        perror("Error writing to file");
        close(fd);
        return 1;
    }

    printf("Content of the
