#include <stdio.h>
#include <stdlib.h>

#define MAX_BLOCKS 100

struct File {
    int indexBlock[MAX_BLOCKS];
    char dataBlock[MAX_BLOCKS][50];
};

void writeBlock(struct File *file, int blockNumber, const char *data) {
    file->indexBlock[blockNumber] = 1; // Set the index entry for the block
    snprintf(file->dataBlock[blockNumber], sizeof(file->dataBlock[blockNumber]), "%s", data);
}

void readBlocks(struct File *file, int numBlocks) {
    printf("\nReading Blocks:\n");

    for (int i = 0; i < numBlocks; i++) {
        if (file->indexBlock[i] == 1) {
            printf("Block %d: %s\n", i + 1, file->dataBlock[i]);
        } else {
            printf("Block %d is empty\n", i + 1);
        }
    }
}

int main() {
    struct File file;
    int numBlocks;

    printf("Enter the number of blocks: ");
    scanf("%d", &numBlocks);

    if (numBlocks > MAX_BLOCKS) {
        fprintf(stderr, "Exceeded maximum number of blocks\n");
        return 1;
    }

    // Initialize index entries to 0 (empty)
    for (int i = 0; i < MAX_BLOCKS; i++) {
        file.indexBlock[i] = 0;
    }

    // Simulate writing blocks to the file
    for (int i = 0; i < numBlocks; i++) {
        printf("Enter data for Block %d:\n", i + 1);
        char data[50];
        scanf("%s", data);
        writeBlock(&file, i, data);
    }

    // Simulate reading blocks from the file
    readBlocks(&file, numBlocks);

    return 0;
}
